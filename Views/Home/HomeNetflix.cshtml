@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using NetflixClone.Models;
@model NetflixClone.Models.MovieViewModel
@{
    ViewData["Title"] = "Browser Page";
}

@if (ViewBag.FeaturedMovie != null)
{
    <div class="featured-movie">
        <div class="featured-content">
            <h1>@ViewBag.FeaturedMovie.Title</h1>
            <p>@ViewBag.FeaturedMovie.Description</p>
            <div class="buttons">
                <a href="@ViewBag.FeaturedMovie.TrailerUrl" class="btn btn-play" target="_blank">Play</a>
                <a href="#" class="btn btn-info">More Info</a>
            </div>
        </div>
        <div class="featured-background">
            @if (!string.IsNullOrEmpty(ViewBag.FeaturedMovie.TrailerUrl) && ViewBag.FeaturedMovie.TrailerUrl.Contains("youtube.com/watch"))
            {
                // Extract YouTube Video ID from the TrailerUrl
                var videoId = ViewBag.FeaturedMovie.TrailerUrl.Split("v=")[1].Split("&")[0];

                <iframe width="100%"
                        height="500"
                        src="https://www.youtube.com/embed/@videoId?autoplay=1&mute=1&loop=1&playlist=@videoId"
                        frameborder="0"
                        allow="autoplay; encrypted-media"
                        allowfullscreen>
                </iframe>
            }
            else
            {
                <p>Unable to load the trailer.</p>
            }
        </div>
    </div>
}
else
{
    <p>No featured movie is available at the moment.</p>
}

<div class="movie-slider-section">
    <h3 class="text-white">We Think You'll Love These</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.MovieList ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

<div class="categories">
    <!-- Continue Watching -->
    <div class="movie-slider-section mt-4">
        <h3 class="text-white">Continue Watching</h3>
        <div class="movie-slider d-flex overflow-auto" style="scroll-snap-type: x mandatory;">
            @foreach (var movie in Model.ContinueWatching ?? Enumerable.Empty<Movie>())
            {
                <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px; scroll-snap-align: start;">
                    <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                    <p class="text-white mt-2">@movie.Title</p>
                </div>
            }
        </div>
    </div>
</div>

    <!-- Top 10 Movies -->
    <div class="movie-slider-section mt-4">
        <h3 class="text-white">Top 10 Movies in South Africa Today</h3>
        <div class="movie-slider d-flex overflow-auto" style="scroll-snap-type: x mandatory;">
            @foreach (var movie in Model.Top10Movies ?? Enumerable.Empty<Movie>())
            {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px; scroll-snap-align: start;">
                    <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                    <p class="text-white mt-2">@movie.Title</p>
                </div>
            }
        </div>
    </div>

<!-- Action Movies -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">Action Movies</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.ActionMovies ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

    <!-- Comedy Movies -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">Comedy Movies</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.ComedyMovies ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

    <!-- Drama Movies -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">Drama Movies</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.DramaMovies ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

<!-- Animation Movies -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">Animation Movies</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.AnimationMovies ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

<!-- Horror Movies -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">Horror Movies</h3>
    <div class="movie-slider d-flex overflow-auto">
        @foreach (var movie in Model.HorrorMovies ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white">@movie.Title</p>
            </div>
        }
    </div>
</div>

    <!-- Trending Now -->
    <div class="movie-slider-section mt-4">
        <h3 class="text-white">Trending Now</h3>
        <div class="movie-slider d-flex overflow-auto" style="scroll-snap-type: x mandatory;">
            @foreach (var movie in Model.TrendingMovies ?? Enumerable.Empty<Movie>())
            {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px; scroll-snap-align: start;">
                    <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                    <p class="text-white mt-2">@movie.Title</p>
                </div>
            }
        </div>
    </div>

<!-- New Releases -->
<div class="movie-slider-section mt-4">
    <h3 class="text-white">New Releases</h3>
    <div class="movie-slider d-flex overflow-auto" style="scroll-snap-type: x mandatory;">
        @foreach (var movie in Model.NewReleases ?? Enumerable.Empty<Movie>())
        {
            <div class="movie-card-2" onclick="showTrailer('@movie.TrailerUrl', '@movie.Title', '@movie.Description', '@movie.PosterUrl')" style="min-width: 200px; margin-right: 10px; scroll-snap-align: start;">
                <img src="@movie.PosterUrl" alt="@movie.Title" class="img-fluid">
                <p class="text-white mt-2">@movie.Title</p>
            </div>
        }
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="trailerModal" tabindex="-1" aria-labelledby="trailerModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="trailerModalLabel">Movie Trailer</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Movie Details -->
                <div id="movieDetails">
                    <img id="moviePoster" src="" alt="Movie Poster" class="img-fluid mb-3">
                    <h5 id="movieTitle"></h5>
                    <p id="movieDescription"></p>
                </div>
                <!-- Trailer Button -->
                <button id="playTrailerBtn" class="btn btn-danger">Play Trailer</button>
                <!-- Iframe for Trailer -->
                <iframe width="100%" height="400" src="" frameborder="0" allowfullscreen id="trailerIframe" style="display:none;"></iframe>
            </div>
        </div>
    </div>
</div>

<script>
// Toggle Search Bar
function toggleSearchBar() {
    const searchBar = document.getElementById("searchBar");
    if (searchBar.style.display === "block") {
        searchBar.style.display = "none";
    } else {
        searchBar.style.display = "block";
    }
}

// Search Movies/TV Shows
    function searchMovies(query) {
        if (query.length < 3) return; // Only search if query is 3+ characters

        fetch(`/Home/Search?query=${query}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }
                return response.json();
            })
            .then(data => {
                console.log("Search results:", data);

                const resultsContainer = document.getElementById("search-results");
                resultsContainer.innerHTML = ""; // Clear previous results

                data.forEach(movie => {
                    const movieElement = document.createElement("div");
                    movieElement.textContent = movie.title;
                    resultsContainer.appendChild(movieElement);
                });
            })
            .catch(error => console.error("Error searching movies:", error));
    }

// Switch Profile
function switchProfile(profileId) {
    fetch('/Profile/SelectProfile', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': '@Html.AntiForgeryToken()' // CSRF protection
        },
        body: JSON.stringify(profileId)
    })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                window.location.href = '/Home/HomeNetflix'; // Redirect to Netflix homepage
            } else {
                console.error("Failed to switch profile.");
            }
        })
        .catch(error => {
            console.error("Error switching profile:", error);
        });
}
</script>