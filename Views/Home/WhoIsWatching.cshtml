@model List<NetflixClone.Models.Profile>

@{
    ViewData["Title"] = "Who is Watching";
}

<div class="who-is-watching">
    <h1>Who's watching?</h1>
    <div id="messageContainer" class="message-container"></div>
    <!-- CSRF Token -->
    <input type="hidden" id="csrfToken" name="__RequestVerificationToken" value="@ViewData["__RequestVerificationToken"]" />
    <div class="profiles-container">
        @if (Model != null && Model.Any())
        {
            @foreach (var profile in Model)
            {
                <div class="profile" onclick="selectProfile(@profile.Id)">
                    <i class="fas fa-user-circle profile-icon" style="color: @profile.IconUrl;"></i>
                    <p class="profile-name">@profile.Name</p>
                </div>
            }
        }
        else
        {
            <p>No profiles found. Add a new profile below!</p>
        }

        <!-- Add Profile Button -->
        <div class="profile add-profile" onclick="openAddProfileModal()">
            <i class="fas fa-plus-circle profile-icon add-icon"></i>
            <p class="profile-name">Add Profile</p>
        </div>
    </div>
    <button class="manage-profiles-btn" onclick="window.location.href='/Profile/ManageProfiles'">Manage Profiles</button>
</div>

<!-- Add Profile Modal -->
<div id="addProfileModal" class="profile-modal">
    <div class="profile-modal-content">
        <span class="close" onclick="closeAddProfileModal()">&times;</span>
        <h2>Add New Profile</h2>
        <form method="post" action="/Profile/AddProfile">
            <div class="profile-form-group">
                <label for="profileName">Profile Name</label>
                <input type="text" id="profileName" name="profileName" required placeholder="Enter profile name">
            </div>
            <div class="profile-form-group">
                <label for="profileColor">Profile Icon Color</label>
                <select id="profileColor" name="profileColor">
                    <option value="#3498db">Blue</option>
                    <option value="#f1c40f">Yellow</option>
                    <option value="#9b59b6">Purple</option>
                    <option value="#e74c3c">Red</option>
                    <option value="#2ecc71">Green</option>
                </select>
            </div>
            <button type="submit" class="save-profile-btn">Save Profile</button>
        </form>
    </div>
</div>

<script>
    function showMessage(message, type) {
        const messageContainer = document.getElementById("messageContainer");
        messageContainer.innerHTML = `<p class="${type}">${message}</p>`;
        messageContainer.style.display = "block";

        setTimeout(() => {
            messageContainer.style.display = "none";
        }, 3000);
    }

    // Redirect to HomeNetflix with selected profile
    function selectProfile(profileId) {
        const csrfToken = document.getElementById("csrfToken").value;

        console.log("Selected Profile ID:", profileId); 

        fetch('/Profile/SelectProfile', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'RequestVerificationToken': csrfToken
            },
            body: JSON.stringify(profileId)
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location.href = '/Home/HomeNetflix';
                } else {
                    showMessage(data.message || "Failed to select the profile. Please try again.", "error");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage("An error occurred while selecting the profile.", "error");
            });
    }

    function openAddProfileModal() {
        document.getElementById("addProfileModal").style.display = "block";
    }

    function closeAddProfileModal() {
        document.getElementById("addProfileModal").style.display = "none";
    }
</script>
